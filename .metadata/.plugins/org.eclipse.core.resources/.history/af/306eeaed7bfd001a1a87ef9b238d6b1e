<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:db="http://www.mulesoft.org/schema/mule/db" xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
	xmlns:json-logger="http://www.mulesoft.org/schema/mule/json-logger"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/json-logger http://www.mulesoft.org/schema/mule/json-logger/current/mule-json-logger.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd">
	<sub-flow name="createNewRecordFlow" doc:id="aadb92ca-419e-4dbc-8b13-3a51232d282f" >
		<json-logger:logger doc:name="Logger" doc:id="4b10cfee-d44c-4a24-8883-a2fa0360e02a" config-ref="JSON_Logger_Config" message="Entering createNewRecordFlow"/>
		<ee:transform doc:name="Transform Message" doc:id="6e533c8b-3516-491f-8e42-fb691d61df5e" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/java
fun convertToOracleTimestamp(d: DateTime|Null) = if (d == null) (null) else (d as String {
	format: "yyyy-MM-dd HH:mm:ss.SSS"
})
---
{
	AccountStatus1C: payload.AccountStatus1C,
	Address: payload.Address,
	AddressPostalCode: payload.AddressPostalCode,
	BillingCity: payload.BillingCity,
	BillingCountry: payload.BillingCountry,
	BillingCountryCode: payload.BillingCountryCode,
	BillingPostalCode: payload.BillingPostalCode,
	BillingState: payload.BillingState,
	BillingStateCode: payload.BillingStateCode,
	BillingStreet: payload.BillingStreet,
	CharityNumberC: payload.CharityNumberC,
	ClientBusinessGroupC: payload.ClientBusinessGroupC,
	CreatedById: payload.CreatedById,
	CreatedDate: convertToOracleTimestamp(payload.CreatedDate),
	CurrencyIsoCode: payload.CurrencyIsoCode,
	Id: payload.Id,
	Industry: payload.Industry,
	LastActivityDate: payload.LastActivityDate,
	LastModifiedById: payload.LastModifiedById,
	LastModifiedDate: convertToOracleTimestamp(payload.LastModifiedDate),
	LastReferencedDate: convertToOracleTimestamp(payload.LastReferencedDate),
	LastViewedDate: convertToOracleTimestamp(payload.LastViewedDate),
	Name: payload.Name,
	OwnerId: payload.OwnerId,
	ParentId: payload.ParentId,
	Phone: payload.Phone,
	PhotoUrl: payload.PhotoUrl,
	RecordTypeId: payload.RecordTypeId,
	ShippingCity: payload.ShippingCity,
	ShippingCountry: payload.ShippingCountry,
	ShippingPostalCode: payload.ShippingPostalCode,
	ShippingState: payload.ShippingState,
	ShippingStreet: payload.ShippingStreet,
	SystemModstamp: convertToOracleTimestamp(payload.SystemModstamp),
	VATIDNumberC: payload.VATIDNumberC,
	Website: payload.Website
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<json-logger:logger doc:name="Logger" doc:id="7288e06e-26c5-439b-8e9a-98b766c6e3fb" config-ref="JSON_Logger_Config" message="Payload transformed to database-friendly format"/>
		<db:insert doc:name="Insert" doc:id="bf186605-682c-44dd-a9e5-fa9e28134a8a" config-ref="Database_Config">
			<db:sql ><![CDATA[INSERT INTO ATLAS_ACCOUNT
(ACCOUNT_STATUS1_C, ADDRESS, ADDRESS_POSTAL_CODE, BILLING_CITY, BILLING_COUNTRY, BILLING_COUNTRY_CODE, BILLING_POSTAL_CODE, BILLING_STATE, BILLING_STATE_CODE, BILLING_STREET, CHARITY_NUMBER_C, CLIENT_BUSINESS_GROUP_C, CREATED_BY_ID, CREATED_DATE, CURRENCY_ISO_CODE, ID, INDUSTRY, LAST_ACTIVITY_DATE, LAST_MODIFIED_BY_ID, LAST_MODIFIED_DATE, LAST_REFERENCED_DATE, LAST_VIEWED_DATE, NAME, OWNER_ID, PARENT_ID, PHONE, PHOTO_URL, RECORD_TYPE_ID, SHIPPING_CITY, SHIPPING_COUNTRY, SHIPPING_POSTAL_CODE, SHIPPING_STATE, SHIPPING_STREET, SYSTEM_MODSTAMP, VAT_ID_NUMBER_C, WEBSITE)
VALUES
(:AccountStatus1C, :Address, :AddressPostalCode, :BillingCity, :BillingCountry, :BillingCountryCode, :BillingPostalCode, :BillingState, :BillingStateCode, :BillingStreet, :CharityNumberC, :ClientBusinessGroupC, :CreatedById, :CreatedDate, :CurrencyIsoCode, :Id, :Industry, :LastActivityDate, :LastModifiedById, :LastModifiedDate, :LastReferencedDate, :LastViewedDate, :Name, :OwnerId, :ParentId, :Phone, :PhotoUrl, :RecordTypeId, :ShippingCity, :ShippingCountry, :ShippingPostalCode, :ShippingState, :ShippingStreet, :SystemModstamp, :VATIDNumberC, :Website)]]></db:sql>
			<db:input-parameters ><![CDATA[#[payload]]]></db:input-parameters>
		</db:insert>
		<json-logger:logger doc:name="Logger" doc:id="00fe266b-84ce-484e-b6f5-70aba5c0ff6b" config-ref="JSON_Logger_Config" message="New account record added to database"/>
		<choice doc:name="Choice" doc:id="c3312182-64f7-48ce-87ac-4d0f8b3e6064" >
			<when expression="#[payload.affectedRows &gt; 0]">
				<ee:transform doc:name="Transform Message" doc:id="193ce9bb-ace5-4bb4-aae1-e327a063c2cd" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
}]]></ee:set-payload>
					</ee:message>
				</ee:transform>
				<json-logger:logger doc:name="Logger" doc:id="6473ba39-af71-435a-ba3a-7d2fbb20b55c" config-ref="JSON_Logger_Config" message="Account created - flow complete"/>
			</when>
		</choice>
	</sub-flow>
</mule>
